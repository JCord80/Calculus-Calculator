import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import sympy as sp
def simpson_integral():
    x = sp.symbols('x')
    function = sp.sympify(input("Enter a function of x: "))
    a = float(input("Choose a lower bound: "))
    b = float(input("Choose an upper bound: "))
    n = 1000000
    
    h = (b-a)/n
    f = sp.lambdify(x, function)
    integral = f(a) + f(b)

    for i in range (1, n):
        xi = a+i*h
        if i % 2 == 0:
            integral += 2 * f(xi)
        else:
            integral += 4 * f(xi)
    integral *= h/3
    print(integral)


x = np.linspace(0, 10, 100)
y = np.sin(x)
z = np.cos(x)
fig = plt.figure(figsize=(10, 8))
ax = fig.add_subplot(111, projection='3d')
ax.plot(x, y, z)

# Set axis ranges
ax.set_xlim(0, 5)
ax.set_ylim(-1.5, 1.5)
ax.set_zlim(-1, 10)
plt.title("3D Plot with Custom Axis Ranges")
plt.show()